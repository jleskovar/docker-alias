# ------------------------------------
# Docker functions with completions
# ------------------------------------
# Installation:
#    add the following to .bashrc:  . ~/.docker_functions.sh

#####################################################
# wrapper to properly tab complete partial input
#####################################################

function _docker_images_partial {
	local cur
	_get_comp_words_by_ref cur
	declare -F _docker_images >/dev/null && _docker_images
	return 0
}

function _docker_exec_partial {
	local cur
	_get_comp_words_by_ref cur
	declare -F _docker_exec >/dev/null && _docker_exec
	return 0
}

function _docker_stats_partial {
	local cur
	_get_comp_words_by_ref cur
	declare -F _docker_stats >/dev/null && _docker_stats
	return 0
}

#####################################################

# Get latest container ID
function dl { docker ps -l -q; }

# Get container process
function dps { docker ps $@; }

# Get process included stop container
function dpa { docker ps -a $@; }

# Get images
function di { docker images $@; }

# Get container IP
function dip { docker inspect --format '{{ .NetworkSettings.IPAddress }}' $1; }
complete -F _docker_exec_partial dip

# Run deamonized container, e.g., $dkd base /bin/echo hello
function dkd { docker run -d -P $1; }
complete -F _docker_images_partial dkd

# Run interactive container, e.g., $dki base /bin/bash
function dki { docker run -i -t -P $1; }
complete -F _docker_images_partial dki

# Stop all containers
function dstop { docker stop $(docker ps -a -q); }

# Remove all containers
function drm { docker rm $(docker ps -a -q); }

# Stop and Remove all containers
function dsr { docker stop $(docker ps -a -q) && docker rm $(docker ps -a -q); }

# Remove all images
function dri { docker rmi $(docker images -q); }

# Dockerfile build, e.g., $dbu tcnksm/test 
function dbu { docker build -t $1 .; }

# Run bash for any image
function dbash { docker run --rm -i -t -e TERM=xterm --entrypoint /bin/bash $1; }
complete -F _docker_images_partial dbash

# Enter docker container
function dent { docker exec -i -t $1 /bin/bash; }
complete -F _docker_exec_partial dent

# Find out container PID
function dpid { docker inspect --format '{{.State.Pid}}' $@; }
complete -F _docker_exec_partial dpid

# Get stats for a container
function ds { docker stats $@; }
complete -F _docker_stats_partial ds
